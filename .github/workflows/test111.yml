  
# This is a basic workflow to help you get started with Actions
#
name: TTTTT

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: get branches          
        uses: octokit/request-action@v2.x
        id: get_branches
        with:
          route: GET /repos/{owner}/branches
          owner: ${{github.repository}}
          repo: ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          
      - name: test
        id: ggg
        env:
          GGGG: ${{ toJSON(steps.get_branches.outputs.data)}}
        run: |
          res=$(echo "${{GGGG}}" | jq '.[] | {branch: .name}')
          echo "::set-output name=res::$res" 
      
      - name: test-output
        run: echo  "The output is ${{ steps.ggg.outputs.res }}" 
        
      - name: test curl
        id: call-lambda
        run: |
          response=$(curl https://1om7t54t51.execute-api.us-east-1.amazonaws.com/default/TestAPIForGithubAction)
          echo "::set-output name=response::$response" 
      - name: test-output
        run: echo  "The output is ${{ steps.call-lambda.outputs.response }}" 
